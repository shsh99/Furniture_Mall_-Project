-- TB_SHOP_CARTS 수정 // 11월 29일 V0.1.1
-- TB_SHOP_ORDER, TB_SHOP_ORDER_PRODUCT 수정 // 11월 29일 v0.1.3
-- TB_SHOP_CART_ITEM 수정 // 11월 29일 V0.1.4

-- DROP SEQUENCES
DROP SEQUENCE TB_CODE_CATEGORY_SEQUENCE;
DROP SEQUENCE TB_CODE_SEQUENCE;
DROP SEQUENCE TB_COUPON_SEQUENCE;
DROP SEQUENCE TB_MEMBER_COUPON_SEQUENCE;
DROP SEQUENCE TB_SHOP_ITEMS_SEQUENCE;
DROP SEQUENCE TB_SHOP_ORDER_PRODUCTS_SEQUENCE;
DROP SEQUENCE TB_SHOP_ORDERS_SEQUENCE;
DROP SEQUENCE TB_SHOP_ITEM_REVIEW_SEQUENCE;
DROP SEQUENCE TB_SHOP_CART_SEQUENCE;
-- DROP SEQUENCE TB_SHOP_CART_ITEM_SEQUENCE;
DROP SEQUENCE TB_REPLY_BOARD_SEQUENCE;
DROP SEQUENCE TB_LIKE_SEQUENCE;
DROP SEQUENCE TB_NOTICE_SEQUENCE;
DROP SEQUENCE TB_FAQ_SEQUENCE;

-- CREATE SEQUENCES
CREATE SEQUENCE TB_CODE_CATEGORY_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_CODE_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_COUPON_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_MEMBER_COUPON_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_SHOP_ITEMS_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_SHOP_ORDER_PRODUCTS_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_SHOP_ORDERS_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_SHOP_ITEM_REVIEW_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_SHOP_CART_SEQUENCE START WITH 1 INCREMENT BY 1;
-- CREATE SEQUENCE TB_SHOP_CART_ITEM_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_REPLY_BOARD_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_LIKE_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_NOTICE_SEQUENCE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE TB_FAQ_SEQUENCE START WITH 1 INCREMENT BY 1;

-- DROP TABLES
DROP TABLE TB_CODE_CATEGORY CASCADE CONSTRAINT;
DROP TABLE TB_CODE CASCADE CONSTRAINT;
DROP TABLE TB_COUPON CASCADE CONSTRAINT;
DROP TABLE TB_MEMBER_COUPON CASCADE CONSTRAINT;
DROP TABLE TB_USER CASCADE CONSTRAINT;
DROP TABLE TB_SHOP_ITEMS CASCADE CONSTRAINT;
DROP TABLE TB_SHOP_ORDER_PRODUCTS CASCADE CONSTRAINT;
DROP TABLE TB_SHOP_ORDERS CASCADE CONSTRAINT;
DROP TABLE TB_SHOP_ITEM_REVIEW CASCADE CONSTRAINT;
DROP TABLE TB_SHOP_CART CASCADE CONSTRAINT;
-- DROP TABLE TB_SHOP_CART_ITEM CASCADE CONSTRAINT;
DROP TABLE TB_SHOP_ITEM_IMAGES CASCADE CONSTRAINT;
DROP TABLE TB_REPLY_BOARD CASCADE CONSTRAINT;
DROP TABLE TB_LIKE CASCADE CONSTRAINT;
DROP TABLE TB_NOTICE CASCADE CONSTRAINT;
DROP TABLE TB_FAQ CASCADE CONSTRAINT;

CREATE TABLE TB_CODE_CATEGORY
(
    CODE_CATEGORY_ID   NUMBER(20) NOT NULL,
    CODE_CATEGORY_NAME VARCHAR2(255),
    CONSTRAINT PK_CODE_CATEGORY PRIMARY KEY (CODE_CATEGORY_ID)
);

CREATE TABLE TB_CODE
(
    CODE_ID          NUMBER(20) NOT NULL,
    CODE_NAME        VARCHAR2(255),
    USE_YN           VARCHAR2(1) DEFAULT 'Y',
    CODE_CATEGORY_ID NUMBER(20) NOT NULL,
    CONSTRAINT PK_CODE PRIMARY KEY (CODE_ID),
    CONSTRAINT FK_CODE_CATEGORY FOREIGN KEY (CODE_CATEGORY_ID) REFERENCES TB_CODE_CATEGORY (CODE_CATEGORY_ID)
);

CREATE TABLE TB_COUPON
(
    COUPON_ID       NUMBER(20) NOT NULL,
    COUPON_NAME     VARCHAR2(500),
    DISCOUNT_VALUE  NUMBER(2,0),
    COUPON_END_TIME VARCHAR2(100),
    CONSTRAINT PK_COUPON PRIMARY KEY (COUPON_ID)
);

-- TODO: 인증관련 테이블 정의
-- 유저 테이블
CREATE TABLE TB_USER
(
    EMAIL       VARCHAR2(1000) NOT NULL CONSTRAINT PK_USER PRIMARY KEY, -- 1. 이메일(아이디) TODO: 기본키
    PASSWORD    VARCHAR2(1000) NOT NULL,                                -- 2. 패스워드
    USERNAME    VARCHAR2(1000) NOT NULL,                                -- 3. 이름
    GENDER      VARCHAR2(100) NULL,                                      -- 4. 성별
    BIRTHDAY    VARCHAR2(255) NULL,                                     -- 5. 생년월일
    PHONE       VARCHAR2(255) NULL,                                     -- 6. 휴대전화
    ADDRESS     VARCHAR2(1000) NULL,                                    -- 7. 주소
    CODE_NAME   VARCHAR2(255) NOT NULL,                                 -- 8. 유저권한 TODO: 권한코드명(roleUser, roleAdmin)
    DELETE_YN   VARCHAR2(1) DEFAULT 'N',                                -- 9. 삭제여부
    CREATE_DATE VARCHAR2(1000),                                         -- 10. 생성일자
    UPDATE_DATE VARCHAR2(1000),                                         -- 11. 수정일자
    DELETE_TIME VARCHAR2(1000)                                          -- 12. 삭제일자
);

CREATE TABLE TB_MEMBER_COUPON
(
    M_COUPON_ID NUMBER(20) NOT NULL,
    IS_USED     VARCHAR2(1) DEFAULT 'N',
    COUPON_ID   NUMBER(20),
    EMAIL       VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_MEMBER_COUPON PRIMARY KEY (M_COUPON_ID),
    CONSTRAINT FK_MEMBER_COUPON_COUPON FOREIGN KEY (COUPON_ID) REFERENCES TB_COUPON (COUPON_ID),
    CONSTRAINT FK_MEMBER_COUPON_USER FOREIGN KEY (EMAIL) REFERENCES TB_USER (EMAIL)
);

CREATE TABLE TB_SHOP_ITEM_IMAGES
(
    UUID        VARCHAR2(1000) NOT NULL,
    IMG_TITLE   VARCHAR2(1000),
    IMG_CONTENT VARCHAR2(1000),
    IMG_NAME    VARCHAR2(100),
    IMG_DATA    BLOB,
    IMG_URL     VARCHAR2(1000) NOT NULL,
    CREATE_DATE VARCHAR2(1000),
    UPDATE_DATE VARCHAR2(1000),
    DELETE_YN   VARCHAR2(1) DEFAULT 'N',
    CONSTRAINT PK_SHOP_ITEM_IMAGES PRIMARY KEY (UUID)
);

CREATE TABLE TB_SHOP_ITEMS
(
    ITEM_NO     NUMBER(5) NOT NULL,
    ITEM_NAME   VARCHAR2(100),
    ITEM_PRICE  NUMBER(10,0),
    TOTAL_LIKES NUMBER(5) DEFAULT 0,
    ITEM_QTY    NUMBER(10),
    IMG_PATH    VARCHAR2(255),
    CREATE_DATE VARCHAR2(1000),
    UPDATE_DATE VARCHAR2(1000),
    DELETE_YN   VARCHAR2(1) DEFAULT 'N',
    CONSTRAINT PK_SHOP_ITEMS PRIMARY KEY (ITEM_NO)

);

CREATE TABLE TB_SHOP_CART
(
    CART_NO           NUMBER(10) NOT NULL,
--     EMAIL             VARCHAR2(100) NOT NULL,
    AMOUNT            NUMBER(5),
    CART_ALL_PRICE    NUMBER(20,0),
    ITEM_NO           NUMBER(5) NOT NULL,
    CREATE_DATE VARCHAR2(1000),
    UPDATE_DATE VARCHAR2(1000),
    DELETE_YN   VARCHAR2(1) DEFAULT 'N',
    CONSTRAINT PK_SHOP_CART PRIMARY KEY (CART_NO),
    CONSTRAINT FK_SHOP_ITEMS_CART FOREIGN KEY (ITEM_NO) REFERENCES TB_SHOP_ITEMS (ITEM_NO)
--     CONSTRAINT FK_SHOP_CART_USER FOREIGN KEY (EMAIL) REFERENCES TB_USER (EMAIL)
);

-- CREATE TABLE TB_SHOP_CART_ITEM
-- (
--     CART_ITEM_NO    NUMBER(10) NOT NULL,
--     COUNT           NUMBER(5),
--     ITEM_NO         NUMBER(5) NOT NULL,
--     CART_NO         NUMBER(5) NOT NULL,
--     CONSTRAINT PK_SHOP_CART_ITEM PRIMARY KEY (CART_ITEM_NO),
--     CONSTRAINT FK_SHOP_CART_SHOP_ITEM FOREIGN KEY (ITEM_NO) REFERENCES TB_SHOP_ITEMS (ITEM_NO),
--     CONSTRAINT FK_SHOP_CART_ITEM_SHOP FOREIGN KEY (CART_NO) REFERENCES TB_SHOP_CART (CART_NO)
-- );

CREATE TABLE TB_SHOP_ORDERS
(
    ORDER_NO             NUMBER(5) NOT NULL,
    ORDER_CREATE_DATE    VARCHAR2(1000),
    ORDER_PAYMENT_STATUS VARCHAR2(255),
    ORDER_PAYMENT_METHOD VARCHAR2(255) NOT NULL,
    ORDER_TOTAL_PRICE    NUMBER(20,0) NOT NULL,
    EMAIL                VARCHAR2(100) NOT NULL,
    ITEM_NO              NUMBER(5),
    CONSTRAINT PK_SHOP_ORDERS PRIMARY KEY (ORDER_NO),
    CONSTRAINT FK_SHOP_ORDERS_USER FOREIGN KEY (EMAIL) REFERENCES TB_USER (EMAIL),
    CONSTRAINT FK_SHOP_ORDERS_ITEM FOREIGN KEY (ITEM_NO) REFERENCES TB_SHOP_ITEMS (ITEM_NO)
);

CREATE TABLE TB_SHOP_ORDER_PRODUCTS
(
    ORDER_PRODUCT_NO     NUMBER(5) NOT NULL,
    ORDER_NO             NUMBER(5) NOT NULL,
    ORDER_AMOUNT         NUMBER(5),
    REVIEW_ENABLE        VARCHAR2(1) DEFAULT 'N',
    ORDER_PRODUCT_STATUS VARCHAR2(15) NOT NULL,
    CONSTRAINT PK_SHOP_ORDER_PRODUCTS PRIMARY KEY (ORDER_PRODUCT_NO),
    CONSTRAINT FK_SHOP_ORDER_PRODUCTS_ORDER FOREIGN KEY (ORDER_NO) REFERENCES TB_SHOP_ORDERS (ORDER_NO)
);

CREATE TABLE TB_SHOP_ITEM_REVIEW
(
    REVIEW_NO        NUMBER(8) NOT NULL,
    ORDER_PRODUCT_NO NUMBER(5) NOT NULL,
    REVIEW_RATING    NUMBER(1,0) DEFAULT 1,
    REVIEW_TITLE     VARCHAR2(150),
    REVIEW_CONTENT   VARCHAR2(150),
    CREATE_DATE      VARCHAR2(1000),
    UPDATE_DATE      VARCHAR2(1000),
    DELETE_YN        VARCHAR2(1) DEFAULT 'N',
    CONSTRAINT PK_SHOP_ITEM_REVIEW PRIMARY KEY (REVIEW_NO),
    CONSTRAINT FK_SHOP_ITEM_REVIEW_ORDER_PRODUCT FOREIGN KEY (ORDER_PRODUCT_NO) REFERENCES TB_SHOP_ORDER_PRODUCTS (ORDER_PRODUCT_NO)
);


CREATE TABLE TB_REPLY_BOARD
(
    BOARD_NO       NUMBER(10) NOT NULL,
    BOARD_TITLE    VARCHAR2(100),
    BOARD_CONTENTS VARCHAR2(500),
    BOARD_WRITER   VARCHAR2(100),
    BOARD_GROUP    NUMBER,
    BOARD_PARENT   NUMBER,
    CREATE_DATE    VARCHAR2(1000),
    UPDATE_DATE    VARCHAR2(1000),
    DELETE_YN      VARCHAR2(1) DEFAULT 'N',
    CONSTRAINT PK_SHOP_ITEM_QUESTION PRIMARY KEY (BOARD_NO)
);


CREATE TABLE TB_LIKE
(
    LIKE_ID NUMBER(5) NOT NULL,
    ITEM_NO NUMBER(5) NOT NULL,
    EMAIL   VARCHAR2(100) NOT NULL,
    CONSTRAINT PK_LIKE PRIMARY KEY (LIKE_ID),
    CONSTRAINT FK_LIKE_ITEM FOREIGN KEY (ITEM_NO) REFERENCES TB_SHOP_ITEMS (ITEM_NO),
    CONSTRAINT FK_LIKE_USER FOREIGN KEY (EMAIL) REFERENCES TB_USER (EMAIL)
);

CREATE TABLE TB_NOTICE
(
    NOTICE_NO       NUMBER(5) NOT NULL,
    NOTICE_TITLE    VARCHAR2(60),
    NOTICE_CONTENTS VARCHAR2(800),
    CREATE_DATE     VARCHAR2(1000),
    UPDATE_DATE     VARCHAR2(1000),
    DELETE_YN       VARCHAR2(1) DEFAULT 'N',
    CONSTRAINT PK_NOTICE PRIMARY KEY (NOTICE_NO)
);

CREATE TABLE TB_FAQ
(
    FAQ_NO       NUMBER(5) NOT NULL,
    FAQ_TITLE    VARCHAR2(300) NOT NULL,
    FAQ_CONTENTS VARCHAR2(500) NOT NULL,
    CREATE_DATE  VARCHAR2(1000),
    UPDATE_DATE  VARCHAR2(1000),
    DELETE_YN    VARCHAR2(1) DEFAULT 'N' NOT NULL,
    CONSTRAINT PK_FAQ PRIMARY KEY (FAQ_NO)

);